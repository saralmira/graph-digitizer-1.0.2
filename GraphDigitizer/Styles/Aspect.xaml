<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <SolidColorBrush x:Key="dgrHeaderBackground" Color="#EFEFEF"/>
    <SolidColorBrush x:Key="btnMouseOverBD" Color="#9F9F9F"/>
    <SolidColorBrush x:Key="btnMousePressBD" Color="#4096FF"/>
    <SolidColorBrush x:Key="btnMouseOverFX" Color="#DEDEDE"/>
    <SolidColorBrush x:Key="btnMousePressFX" Color="#C1DBFC"/>

    <Style TargetType="{x:Type Button}" x:Key="ViewButtonStyle">
        <Style.Resources>
            <Storyboard x:Key="btnMouseEnter">
                <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="MouseRectangle" Duration="00:00:00.200" From="0" To="0.7" Storyboard.TargetProperty="Opacity"/>
                <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ButtonContent" Duration="00:00:00.200" From="0.3" To="0.9" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>
            <Storyboard x:Key="btnMouseLeave">
                <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="MouseRectangle" Duration="00:00:00.200" From="0.7" To="0" Storyboard.TargetProperty="Opacity"/>
                <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ButtonContent" Duration="00:00:00.200" From="0.9" To="0.3" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>
        </Style.Resources>
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="btnTemplate" TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="MouseRectangle" Background="{StaticResource btnMouseOverFX}" BorderBrush="{StaticResource btnMouseOverBD}" BorderThickness="0" CornerRadius="2" Opacity="0" Margin="0"/>
                        <ContentPresenter x:Name="ButtonContent" Opacity=".3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Width="14" Height="14"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource btnMouseEnter}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource btnMouseLeave}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MouseRectangle" Property="BorderThickness" Value="1"/>
                            <Setter TargetName="MouseRectangle" Property="Background" Value="{StaticResource btnMousePressFX}"/>
                            <Setter TargetName="MouseRectangle" Property="BorderBrush" Value="{StaticResource btnMousePressBD}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ToolBarButtonStyle">
        <Style.Resources>
            <RadialGradientBrush x:Key="RGBN" GradientOrigin="0.25,0.25" RadiusX="0.75" RadiusY="0.75">
                <RadialGradientBrush.GradientStops>
                    <GradientStop Color="White" Offset="0" />
                    <GradientStop Color="Black" Offset="0.65" />
                    <GradientStop Color="Gray" Offset="0.8" />
                </RadialGradientBrush.GradientStops>
            </RadialGradientBrush>
            <Storyboard x:Key="btnMouseEnter">
                <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="MouseRectangle" Duration="00:00:00.200" From="0" To="0.7" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>
            <Storyboard x:Key="btnMouseLeave">
                <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="MouseRectangle" Duration="00:00:00.200" From="0.7" To="0" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>
        </Style.Resources>
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="btnTemplate" TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="MouseRectangle" Background="{StaticResource btnMouseOverFX}" BorderBrush="{StaticResource btnMouseOverBD}" BorderThickness="1" CornerRadius="2" Opacity="0" Margin="0,0,0,1"/>
                        <ContentPresenter x:Name="ButtonContent" Opacity=".9" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2,0,3" Width="20" Height="20"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource btnMouseEnter}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource btnMouseLeave}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonContent" Property="Opacity" Value="0.65"/>
                            <Setter TargetName="MouseRectangle" Property="Background" Value="{StaticResource btnMousePressFX}"/>
                            <Setter TargetName="MouseRectangle" Property="BorderBrush" Value="{StaticResource btnMousePressBD}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="BackgroundOver" Color="#E7E7E7"/>
    <SolidColorBrush x:Key="BackgroundPressed" Color="#D9D9D9"/>
    <SolidColorBrush x:Key="DisabledLight" Color="#E5E5E5"/>
    <SolidColorBrush x:Key="DisabledDark" Color="#D4D4D4"/>
    <SolidColorBrush x:Key="BackgroundLight" Color="#E4E4E4"/>
    <SolidColorBrush x:Key="BackgroundMedium" Color="#CDCDCD"/>
    <SolidColorBrush x:Key="BackgroundMedium2" Color="#BABABA"/>
    <SolidColorBrush x:Key="BackgroundMedium3" Color="#A9A9A9"/>
    <SolidColorBrush x:Key="BackgroundDark" Color="#969696"/>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource btnMousePressFX}"/>
                <Setter Property="BorderBrush" Value="{StaticResource btnMousePressBD}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type DataGridRow}">
        <Style.Resources>
            <Storyboard x:Key="StoryMouseEnter">
                <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="BackgroundRectangle" Duration="00:00:00.200" From="0.0" To="0.9" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>
            <Storyboard x:Key="StoryMouseLeave">
                <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="BackgroundRectangle" Duration="00:00:00.200" From="0.9" To="0.0" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>
        </Style.Resources>
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{StaticResource btnMouseOverBD}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Grid>
                        <Rectangle
                            x:Name="BackgroundRectangle"
                            Fill="{StaticResource BackgroundLight}" Opacity="0"/>
                        <Border
                            x:Name="DGR_Border"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <DataGridCellsPresenter
                                    x:Name="CellsPresenter"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource StoryMouseEnter}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource StoryMouseLeave}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Opacity" Value="1.0"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="24"/>
        <Setter Property="Background" Value="{StaticResource dgrHeaderBackground}"/>
        <Setter Property="SeparatorBrush" Value="LightGray"/>
        <Setter Property="SeparatorVisibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="dgrHeaderTemplate" TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Rectangle
                            x:Name="BackgroundRectangle"
                            Stretch="Fill"
                            Fill="{TemplateBinding Background}"/>
                        <Border x:Name="HeaderBackground" BorderBrush="{TemplateBinding SeparatorBrush}" BorderThickness="0 0 1 1"/>
                        <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{StaticResource BackgroundOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{StaticResource BackgroundPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Points in the graph-->
    <Style x:Key="PointStyle" TargetType="{x:Type Label}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="lblPoint" TargetType="{x:Type Label}">
                    <Grid>
                        <Border Background="#FFFC8A45" BorderBrush="#FF3E150A" BorderThickness="1" CornerRadius="7"/>
                        <Border CornerRadius="7" Opacity="0.5">
                            <Border.Background>
                                <RadialGradientBrush GradientOrigin="0.75,0.25">
                                    <GradientStop Offset="0.5" Color="Transparent"/>
                                    <GradientStop Offset="1" Color="Yellow"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border>
                            <TextBlock x:Name="PointContent" Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-1,0,0"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PointStyleSel" TargetType="{x:Type Label}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="#FFCAD6DF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="lblPoint" TargetType="{x:Type Label}">
                    <Grid>
                        <Border Background="#FF233849" BorderBrush="#FFCAD6DF" BorderThickness="0.8" CornerRadius="7"/>
                        <Border>
                            <TextBlock x:Name="PointContent" Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-1,0,0"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SCROLLBAR -->
    <sys:Double x:Key="ScrollBarSizeD">14</sys:Double>
    <GridLength x:Key="ScrollBarSize">14</GridLength>
    
    <Style x:Key="LineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="tmplRepeatButton" TargetType="{x:Type RepeatButton}">
                    <Border x:Name="brdLine" Background="{StaticResource BackgroundLight}" BorderThickness="0">
                        <Path x:Name="arr" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" Fill="{StaticResource BackgroundDark}" >
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brdLine" Property="Background" Value="{StaticResource BackgroundMedium2}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="brdLine" Property="Background" Value="{StaticResource BackgroundDark}"/>
                            <Setter TargetName="arr" Property="Fill" Value="{StaticResource BackgroundLight}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="brdLine" Property="Background" Value="{StaticResource DisabledLight}"/>
                            <Setter TargetName="arr" Property="Fill" Value="{StaticResource DisabledDark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="tmplRepeatButton">
                    <Border Background="Transparent">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="tmplScrollThumb" TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border x:Name="brdThumb" CornerRadius="2" Background="{StaticResource BackgroundMedium2}" BorderThickness="1" BorderBrush="{StaticResource BackgroundDark}">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center">
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brdThumb" Property="Background" Value="{StaticResource BackgroundMedium3}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="brdThumb" Property="Background" Value="{StaticResource BackgroundDark}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="brdThumb" Property="Background" Value="{StaticResource DisabledLight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScroll" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="{StaticResource ScrollBarSize}"></RowDefinition>
                <RowDefinition Height="0.00001*"></RowDefinition>
                <RowDefinition Height="{StaticResource ScrollBarSize}"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" Background="{StaticResource BackgroundLight}" CornerRadius="0" BorderThickness="0"></Border>
            <RepeatButton Grid.Row="0" Style="{StaticResource LineButton}" Height="{StaticResource ScrollBarSizeD}" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z">
            </RepeatButton>
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource PageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource PageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2" Style="{StaticResource LineButton}" Height="{StaticResource ScrollBarSizeD}" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z">
            </RepeatButton>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScroll" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource ScrollBarSize}"></ColumnDefinition>
                <ColumnDefinition Width="0.00001*"></ColumnDefinition>
                <ColumnDefinition Width="{StaticResource ScrollBarSize}"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" Background="{StaticResource BackgroundLight}" CornerRadius="0" BorderThickness="0"></Border>
            <RepeatButton Grid.Column="0" Style="{StaticResource LineButton}" Width="{StaticResource ScrollBarSizeD}" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z">
            </RepeatButton>
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource PageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource PageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2" Style="{StaticResource LineButton}" Width="{StaticResource ScrollBarSizeD}" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z">
            </RepeatButton>
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Opacity" Value="0.56"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="{StaticResource ScrollBarSizeD}"></Setter>
                <Setter Property="Height" Value="Auto"></Setter>
                <Setter Property="Template" Value="{StaticResource VerticalScroll}"></Setter>
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"></Setter>
                <Setter Property="Height" Value="{StaticResource ScrollBarSizeD}"></Setter>
                <Setter Property="Template" Value="{StaticResource HorizontalScroll}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--
    <Style x:Key=" CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="#454545"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#E0252525"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#242424"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#242424"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="#454545"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#E0252525"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#242424"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#242424"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    -->

    <!--ComboBox-->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--ComBoxItem-->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="22"/>
                    <Setter Property="MinWidth" Value="60"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Grid>
                                    <Border x:Name="Back" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent" Margin="1"/>
                                    <Border Name="BD" Background="Transparent" BorderBrush="Transparent">
                                        <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource dgrHeaderBackground}"/>
                                        <Setter TargetName="Back" Property="BorderBrush" Value="{StaticResource BackgroundMedium}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource btnMousePressFX}"/>
                                        <Setter TargetName="Back" Property="BorderBrush" Value="{StaticResource btnMousePressBD}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="{TemplateBinding Background}">
                        <ToggleButton Grid.Column="0" Content="{TemplateBinding Text}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" Opacity="0.5" ShadowDepth="2"/>
                                </Border.Effect>
                                <ScrollViewer Margin="0,2,4,4" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel | IsItemsHost = True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TreeViewItem-->
    <Style  x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Style.Resources>
            <LinearGradientBrush x:Key="background1" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="#FAFBFD"/>
                <GradientStop Offset="1" Color="#EBF3FD"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="background2" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="#F1F7FE"/>
                <GradientStop Offset="1" Color="#CFE4FE"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="background3" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="#DCEBFC"/>
                <GradientStop Offset="1" Color="#C1DBFC"/>
            </LinearGradientBrush>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Name="itemBackground" Background="{TemplateBinding Background}"  Height="20"
                                BorderThickness="1" CornerRadius="2" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent">
                                <Grid x:Name="ItemRoot" Margin="{TemplateBinding Margin}" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" HorizontalAlignment="Left" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Width" Value="16"/>
                                                <Setter Property="Height" Value="16"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border Background="Transparent" Height="16" Padding="5" Width="16">
                                                                <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="Transparent" Stroke="#9e9e9e">
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                                        <Condition Property="IsChecked" Value="False"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#27C7F7"/>
                                                                    <Setter Property="Fill" TargetName="ExpandPath" Value="#BAE4FA"/>
                                                                    <Setter Property="Effect" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <DropShadowEffect ShadowDepth="0" Color="#27C7F7" Opacity="1" BlurRadius="1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                                        <Condition Property="IsChecked" Value="True"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#1CC4F7"/>
                                                                    <Setter Property="Fill" TargetName="ExpandPath" Value="#82DFFB"/>
                                                                    <Setter Property="Effect" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <DropShadowEffect ShadowDepth="0" Color="#1CC4F7" Opacity="1" BlurRadius="1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="False"/>
                                                                        <Condition Property="IsChecked" Value="True"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#202326"/>
                                                                    <Setter Property="Fill" TargetName="ExpandPath" Value="#595959"/>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header"
                                                 HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5 0 0 0">
                                    </ContentPresenter>
                                </Grid>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition SourceName="itemBackground" Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource background1}" TargetName="itemBackground"/>
                            <Setter Property="BorderBrush" Value="#B8D6FB" TargetName="itemBackground"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition SourceName="itemBackground" Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource background2}" TargetName="itemBackground"/>
                            <Setter Property="BorderBrush" Value="#84ACDD" TargetName="itemBackground"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition SourceName="itemBackground" Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource background3}" TargetName="itemBackground"/>
                            <Setter Property="BorderBrush" Value="#7DA2CE" TargetName="itemBackground"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ValidationErrorObject">
        <Border BorderThickness="1" CornerRadius="1" BorderBrush="Red">
            <Grid>
                <AdornedElementPlaceholder Name="customAdorner"/>
                <Image Source="/Resources/error.png" Stretch="Uniform" Margin="0 0 5 0" Width="14" Height="14" VerticalAlignment="Center" HorizontalAlignment="Right" ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="ValidationErrorObjectTop">
        <Border BorderThickness="1" CornerRadius="1" BorderBrush="Red">
            <Grid>
                <AdornedElementPlaceholder Name="customAdorner"/>
                <Image Source="/Resources/error.png" Stretch="Uniform" Margin="0 3 5 0" Width="14" Height="14" VerticalAlignment="Top" HorizontalAlignment="Right" ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
            </Grid>
        </Border>
    </ControlTemplate>
    
    <ControlTemplate x:Key="ValidationErrorObjectBottom">
        <Border BorderThickness="1" CornerRadius="1" BorderBrush="Red">
            <Grid>
                <AdornedElementPlaceholder Name="customAdorner"/>
                <Image Source="/Resources/error.png" Stretch="Uniform" Margin="0 0 5 3" Width="14" Height="14" VerticalAlignment="Bottom" HorizontalAlignment="Right" ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
            </Grid>
        </Border>
    </ControlTemplate>

</ResourceDictionary>